# .github/workflows/deploy.yml

name: Build and Deploy Website

# Este workflow roda toda vez que você envia ("push") código para a branch 'main'
on:
  push:
    branches:
      - main

# Permissões necessárias para que a Action possa publicar no GitHub Pages
permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # O workflow roda em um servidor Linux virtual

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # 1. Baixa o seu código do repositório

      - name: Setup Node.js
        uses: actions/setup-node@v3 # Prepara o ambiente para rodar scripts
        with:
          node-version: '18'

      - name: Build and Version Assets
        id: build
        run: |
          # 2. O CORAÇÃO DA LÓGICA DE CACHE BUSTING
          
          # Pega os 8 primeiros caracteres do identificador do commit para criar uma versão única
          BUILD_HASH=$(echo $GITHUB_SHA | head -c 8)
          echo "BUILD_HASH=${BUILD_HASH}" >> $GITHUB_ENV

          # Cria uma pasta 'dist' que conterá o site final
          mkdir dist
          
          # Renomeia e move os arquivos CSS e JS para a pasta 'dist' com o hash
          # Exemplo: style.css -> style.${BUILD_HASH}.css
          for file in $(find assets -type f \( -name "*.css" -o -name "*.js" \)); do
            # Cria a estrutura de pastas dentro de 'dist'
            mkdir -p "dist/$(dirname "${file}")"
            
            # Pega o nome do arquivo e a extensão
            FILENAME=$(basename "${file}")
            BASENAME="${FILENAME%.*}"
            EXTENSION="${FILENAME##*.}"
            
            # Define o novo nome com o hash
            NEW_FILENAME="${BASENAME}.${BUILD_HASH}.${EXTENSION}"
            
            # Copia o arquivo para a pasta 'dist' com o novo nome
            cp "${file}" "dist/$(dirname "${file}")/${NEW_FILENAME}"
            
            # ATUALIZA OS ARQUIVOS HTML:
            # Encontra todas as referências ao arquivo original nos HTMLs e as substitui pelo novo nome
            find . -name "*.html" -type f -exec sed -i "s|${FILENAME}|${NEW_FILENAME}|g" {} +
          done
          
          # 3. Copia os arquivos que não mudam de nome (HTML, imagens, vídeos) para a pasta 'dist'
          cp -r *.html assets/images assets/videos dist/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3 # 4. Publica o conteúdo da pasta 'dist'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist # A pasta que contém o site final a ser publicado